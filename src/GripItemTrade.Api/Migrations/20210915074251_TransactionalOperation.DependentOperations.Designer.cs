// <auto-generated />
using System;
using GripItemTrade.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GripItemTrade.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210915074251_TransactionalOperation.DependentOperations")]
    partial class TransactionalOperationDependentOperations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GripItemTrade.Domain.Accounts.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("GripItemTrade.Domain.Accounts.BalanceEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CustomerId");

                    b.ToTable("BalanceEntries");
                });

            modelBuilder.Entity("GripItemTrade.Domain.Customers.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("GripItemTrade.Domain.Transactions.TransactionalOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OperationType")
                        .HasColumnType("int");

                    b.Property<int?>("ParentOperationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ParentOperationId");

                    b.ToTable("TransactionalOperations");
                });

            modelBuilder.Entity("GripItemTrade.Domain.Transactions.TransactionalOperationEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BalanceEntryCode")
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("BalanceEntryId")
                        .HasColumnType("int");

                    b.Property<int?>("TransactionalOperationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BalanceEntryId");

                    b.HasIndex("TransactionalOperationId");

                    b.ToTable("TransactionOperationEntries");
                });

            modelBuilder.Entity("GripItemTrade.Domain.Accounts.Account", b =>
                {
                    b.HasOne("GripItemTrade.Domain.Customers.Customer", "Customer")
                        .WithMany("Accounts")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("GripItemTrade.Domain.Accounts.BalanceEntry", b =>
                {
                    b.HasOne("GripItemTrade.Domain.Accounts.Account", "Account")
                        .WithMany("BalanceEntries")
                        .HasForeignKey("AccountId");

                    b.HasOne("GripItemTrade.Domain.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Account");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("GripItemTrade.Domain.Transactions.TransactionalOperation", b =>
                {
                    b.HasOne("GripItemTrade.Domain.Accounts.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("GripItemTrade.Domain.Transactions.TransactionalOperation", "ParentOperation")
                        .WithMany("DependentOperations")
                        .HasForeignKey("ParentOperationId");

                    b.Navigation("Account");

                    b.Navigation("ParentOperation");
                });

            modelBuilder.Entity("GripItemTrade.Domain.Transactions.TransactionalOperationEntry", b =>
                {
                    b.HasOne("GripItemTrade.Domain.Accounts.BalanceEntry", "BalanceEntry")
                        .WithMany()
                        .HasForeignKey("BalanceEntryId");

                    b.HasOne("GripItemTrade.Domain.Transactions.TransactionalOperation", null)
                        .WithMany("Entries")
                        .HasForeignKey("TransactionalOperationId");

                    b.Navigation("BalanceEntry");
                });

            modelBuilder.Entity("GripItemTrade.Domain.Accounts.Account", b =>
                {
                    b.Navigation("BalanceEntries");
                });

            modelBuilder.Entity("GripItemTrade.Domain.Customers.Customer", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("GripItemTrade.Domain.Transactions.TransactionalOperation", b =>
                {
                    b.Navigation("DependentOperations");

                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
